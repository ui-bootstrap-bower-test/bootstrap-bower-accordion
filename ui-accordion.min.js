angular.module("ui.bootstrap.accordion",["ui.bootstrap.collapse"]).constant("accordionConfig",{closeOthers:!0}).controller("AccordionController",["$scope","$attrs","accordionConfig",function(o,n,r){this.groups=[],this.closeOthers=function(e){var t=angular.isDefined(n.closeOthers)?o.$eval(n.closeOthers):r.closeOthers;t&&angular.forEach(this.groups,function(o){o!==e&&(o.isOpen=!1)})},this.addGroup=function(o){var n=this;this.groups.push(o),o.$on("$destroy",function(){n.removeGroup(o)})},this.removeGroup=function(o){var n=this.groups.indexOf(o);-1!==n&&this.groups.splice(n,1)}}]).directive("accordion",function(){return{restrict:"EA",controller:"AccordionController",transclude:!0,replace:!1,templateUrl:"template/accordion/accordion.html"}}).directive("accordionGroup",function(){return{require:"^accordion",restrict:"EA",transclude:!0,replace:!0,templateUrl:"template/accordion/accordion-group.html",scope:{heading:"@",isOpen:"=?",isDisabled:"=?"},controller:function(){this.setHeading=function(o){this.heading=o}},link:function(o,n,r,e){e.addGroup(o),o.$watch("isOpen",function(n){n&&e.closeOthers(o)}),o.toggleOpen=function(){o.isDisabled||(o.isOpen=!o.isOpen)}}}}).directive("accordionHeading",function(){return{restrict:"EA",transclude:!0,template:"",replace:!0,require:"^accordionGroup",compile:function(o,n,r){return function(o,n,e,t){t.setHeading(r(o,function(){}))}}}}).directive("accordionTransclude",function(){return{require:"^accordionGroup",link:function(o,n,r,e){o.$watch(function(){return e[r.accordionTransclude]},function(o){o&&(n.html(""),n.append(o))})}}});